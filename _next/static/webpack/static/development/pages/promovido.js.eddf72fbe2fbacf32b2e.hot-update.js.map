{"version":3,"file":"static/webpack/static/development/pages/promovido.js.eddf72fbe2fbacf32b2e.hot-update.js","sources":["webpack:///./actions/promovido.js","webpack:///./components/Promovidos/Filter.js"],"sourcesContent":["import React from 'react'\nimport { actionTypes } from './types'\nimport fetch from 'isomorphic-unfetch'\n\nexport const get_zones = token => async dispatch => {\n    const response = await fetch('http://10.0.0.5:8000/api/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`\n        },\n        body: JSON.stringify({\n            app: 'territory',\n            target: 'zone',\n            action: 'all',\n            depth: 2\n        })\n    });\n    if (response.ok){\n        return dispatch({\n            type: actionTypes.PROMOTED_GET_ZONES,\n            payload: await response.json()\n        });\n    }\n};\n\nexport const get_promoted = token => async dispatch => {\n    const response = await fetch('http://10.0.0.5:8000/api/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`\n        },\n        body: JSON.stringify({\n            app: 'api',\n            target: 'promoted',\n            action: 'all',\n            depth: 2\n        })\n    });\n    if (response.ok){\n        return dispatch({\n            type: actionTypes.GET_PROMOTED,\n            payload: await response.json()\n        });\n    }\n};\n\nexport const get_areas = (Data, zone) => dispatch => {\n    Data.map(data => {\n        if(zone == data.id) return dispatch({\n            type: actionTypes.PROMOTED_GET_AREAS,\n            payload: data.area\n        });\n    });\n};\n\nexport const get_sections = (Data, form) => dispatch => {\n    Data.map(data => {\n        if(form.zone == data.id) data.area.map(area => {\n            if(form.area == area.id) return dispatch({\n                type: actionTypes.PROMOTED_GET_SECTIONS,\n                payload: area.section\n            })\n        })\n    })\n};\n\nexport const get_persons = (Data, token, form, name) => async dispatch => {\n    let name_section;\n    Data.map(data => {\n        if(form.zone == data.id) data.area.map(area => {\n            if(form.area == area.id) area.section.map(section => {\n                if(form.section == section.id) name_section = section.section;\n            })\n        })\n    });\n    const response = await fetch('http://10.0.0.5:8000/api/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`\n        },\n        body: JSON.stringify({\n            app: 'api',\n            target: 'census',\n            action: 'get',\n            model: {\n                search: {\n                    \"search\": name,\n                    \"address__Seccion\": `${name_section}`\n                }\n            }\n        })\n    });\n    if (response.ok){\n        return dispatch({\n            type: actionTypes.PROMOTED_GET_PERSONS,\n            payload: await response.json()\n        });\n    }\n};\n\nexport const set_formPromoted = (target, value) => dispatch =>{\n    return dispatch({\n        type: actionTypes.PROMOTED_SET_FORM,\n        target,\n        value\n    })\n};\n\nexport const save_promoted = state => async dispatch => {\n    let body;\n    let formPromoted = state.promovido.formPromoted;\n    if(formPromoted.userExist != null){\n        body = JSON.stringify({\n            app: 'api',\n            target: 'promoted',\n            action: 'add',\n            model:{\n                person: formPromoted.userExist,\n                phone: formPromoted.phone,\n                status: 'S',\n                candidate: [state.global.active_candidate]\n            }\n        })\n    } else {\n        const response = await fetch('http://10.0.0.5:8000/api/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${state.auth.token}`\n            },\n            body: JSON.stringify({\n                app: 'api',\n                target: 'census',\n                action: 'add',\n                model:{\n                    last_name: formPromoted.last_name,\n                    second_last_name: formPromoted.second_last_name,\n                    name: formPromoted.name,\n                    address:{\n                        ...state.promovido.forms,\n                        birthday: `${formPromoted.day}/${formPromoted.month}/${formPromoted.year}`\n                    }\n                }\n            })\n        });\n        if (response.ok){\n            let person = await response.json();\n            body = JSON.stringify({\n                app: 'api',\n                target: 'promoted',\n                action: 'add',\n                model:{\n                    person: person.id,\n                    phone: formPromoted.phone,\n                    status: 'S',\n                    candidate: [state.global.active_candidate]\n                }\n            })\n        } else {\n            return {\n                error: 'error'\n            }\n        }\n\n    }\n    const response = await fetch('http://10.0.0.5:8000/api/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${state.auth.token}`\n        },\n        body\n    });\n    if (response.ok){\n        return dispatch({type: actionTypes.SAVE_PROMOTED});\n    }\n};","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport Select2 from 'react-select2-wrapper'\nimport {\n    get_sections,\n    get_areas,\n    get_zones,\n    get_promoted\n} from '../../actions/promovido'\nimport PropTypes from 'prop-types'\n\n\nclass Filter extends Component {\n    static propTypes = {\n        get_zones: PropTypes.func.isRequired,\n        get_areas: PropTypes.func.isRequired,\n        get_sections: PropTypes.func.isRequired,\n        get_promoted: PropTypes.func.isRequired,\n        Zones: PropTypes.array,\n        Areas: PropTypes.array,\n        Sections: PropTypes.array,\n        Persons: PropTypes.array,\n        Data: PropTypes.array,\n        token: PropTypes.string,\n        forms: PropTypes.object\n    };\n\n    constructor(props){\n        super(props);\n        this.onChangeZone = this.onChangeZone.bind(this);\n        this.onChangeArea = this.onChangeArea.bind(this);\n        this.onChangeSection = this.onChangeSection.bind(this);\n    }\n\n    componentWillMount() {\n        this.props.get_zones(this.props.token);\n        this.props.get_promoted(this.props.token);\n    }\n\n    onChangeZone = e => {\n        e.preventDefault();\n        this.props.forms.zone = e.target.value;\n        this.props.get_areas(this.props.Data, this.props.forms.zone);\n    };\n\n    onChangeArea = e => {\n        e.preventDefault();\n        this.props.forms.area = e.target.value;\n        this.props.get_sections(this.props.Data, this.props.forms);\n    };\n\n    onChangeSection(e){\n        e.preventDefault();\n        this.props.forms.section = e.target.value;\n    }\n\n    render() {\n        const { zone, area, section } = this.props.forms;\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"box\">\n                        <div className=\"box-header with-border\">\n                            <h4 className=\"box-title\">Área de Promoción</h4>\n                            <ul className=\"box-controls pull-right\">\n                                <li><a className=\"box-btn-slide\" href=\"#\"/></li>\n                            </ul>\n                        </div>\n                        <div className=\"box-body pb-0\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4 col-12\">\n                                    <div className=\"form-group\">\n                                        <label>Zona</label>\n                                        <Select2\n                                            className=\"form-control select2\"\n                                            data={this.props.Zones}\n                                            onChange={this.onChangeZone}\n                                            value={zone}\n                                            options={{\n                                                placeholder: 'Elige una zona'\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4 col-12\">\n                                    <div className=\"form-group\">\n                                        <label>Area</label>\n                                        <Select2\n                                            className=\"form-control select2\"\n                                            data={this.props.Areas}\n                                            onChange={this.onChangeArea}\n                                            value={area}\n                                            options={{\n                                                placeholder: 'Elige un área'\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4 col-12\">\n                                    <div className=\"form-group\">\n                                        <label>Sección</label>\n                                        <Select2\n                                            className=\"form-control select2\"\n                                            data={this.props.Sections}\n                                            onChange={this.onChangeSection}\n                                            value={section}\n                                            options={{\n                                                placeholder: 'Elige una sección'\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    token: state.auth.token,\n    Zones: state.promovido.Zones,\n    Areas: state.promovido.Areas,\n    Sections: state.promovido.Sections,\n    Data: state.promovido.Data,\n    forms: state.promovido.forms\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        get_zones: bindActionCreators(get_zones, dispatch),\n        get_areas: bindActionCreators(get_areas, dispatch),\n        get_sections: bindActionCreators(get_sections, dispatch),\n        get_promoted: bindActionCreators(get_promoted, dispatch)\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAFA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAgBA;AACA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAFA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAgBA;AACA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AASA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AATA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAUA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAJA;AANA;AACA;AAVA;AASA;AACA;AAVA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA6BA;AACA;AA9BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AANA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAJA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAJA;AAJA;AANA;AACA;AAjBA;AAgBA;AACA;AAjBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAJA;AAvCA;AAAA;AACA;AADA;AAAA;AAoDA;AADA;AACA;AApDA;AAAA;AAAA;AA0DA;AACA;AACA;AACA;AAFA;AAIA;AANA;AACA;AA1DA;AAyDA;AACA;AA1DA;AAAA;AAAA;AAAA;AACA;AADA;AAkEA;AAAA;AACA;AAnEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;;;;;AAeA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAaA;AACA;AACA;AAAA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AAAA;AACA;AACA;AArBA;AACA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;AACA;;;AAciBA;;;;AA1GA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AA2GA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;A","sourceRoot":""}